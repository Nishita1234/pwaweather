{"version":3,"sources":["api/fetchWeather.js","App.js","reportWebVitals.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAKaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACDC,IAAMC,IAJrB,kDAI8B,CAClCC,OAAQ,CACJC,EAAGL,EACHM,MAAO,SACPC,MAPI,sCAEY,uBAChBC,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,sD,eCmCVC,EApCH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPV,EADO,KACAW,EADA,OAEgBD,mBAAS,IAFzB,mBAEPE,EAFO,KAEEC,EAFF,KAIRC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACE,UAAVc,EAAEC,IADM,gCAEYjB,EAAaC,GAFzB,OAEDQ,EAFC,OAIPK,EAAWL,GACXG,EAAS,IALF,2CAAH,sDASZ,OACI,sBAAKM,UAAU,iBAAf,UACI,uBAAOC,KAAK,OAAMD,UAAU,SAAQE,YAAY,YAAWC,MAAOpB,EAAMqB,SAAU,SAACN,GAAD,OAAOJ,EAASI,EAAEO,OAAOF,QAAOG,WAAYT,IAC7HF,EAAQY,MACL,sBAAKP,UAAU,OAAf,UACI,qBAAIA,UAAU,YAAd,UACI,+BAAOL,EAAQa,OACf,8BAAMb,EAAQc,IAAIC,aAEtB,sBAAKV,UAAU,YAAf,UACKW,KAAKC,MAAMjB,EAAQY,KAAKM,MACzB,2CAEJ,sBAAKb,UAAU,OAAf,UACI,qBAAKA,UAAU,YAAYc,IAAG,4CAAuCnB,EAAQA,QAAQ,GAAGoB,KAA1D,WAAyEC,IAAKrB,EAAQA,QAAQ,GAAGsB,cAC/H,4BAAItB,EAAQA,QAAQ,GAAGsB,wBCpBhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.69ce53df.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY = 'f33a484cf794d08d0148764789aaba32';\r\n\r\nexport const fetchWeather = async (query) => {\r\n    const { data } = await axios.get(URL, {\r\n        params: {\r\n            q: query,\r\n            units: 'metric',\r\n            APPID: API_KEY,\r\n        }\r\n    });\r\n\r\n    return data;\r\n}","import React, { useState } from 'react';\r\nimport { fetchWeather } from './api/fetchWeather';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    const [query, setQuery] = useState('');\r\n    const [weather, setWeather] = useState({});\r\n    \r\n    const search = async (e) => {\r\n        if(e.key === 'Enter') {\r\n            const data = await fetchWeather(query);\r\n\r\n            setWeather(data);\r\n            setQuery('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <input type=\"text\"className=\"search\"placeholder=\"Search...\"value={query}onChange={(e) => setQuery(e.target.value)}onKeyPress={search}/>\r\n            {weather.main && (\r\n                <div className=\"city\">\r\n                    <h2 className=\"city-name\">\r\n                        <span>{weather.name}</span>\r\n                        <sup>{weather.sys.country}</sup>\r\n                    </h2>\r\n                    <div className=\"city-temp\">\r\n                        {Math.round(weather.main.temp)}\r\n                        <sup>&deg;C</sup>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\r\n                        <p>{weather.weather[0].description}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}